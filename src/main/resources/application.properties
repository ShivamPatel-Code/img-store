
# Application settings
spring.application.name=img-store
server.port=8081

# Imgur API Credentials
# To obtain your Imgur Client ID:
# 1. Register a new client at https://api.imgur.com/oauth2/addclient
# 2. Set the environment variable IMGUR_CLIENT_ID or replace the placeholder below.
imgur.client-id=${IMGUR_CLIENT_ID}

# H2 Database Configuration
# Customize the DB name, url(console.path), username, and password as desired.
spring.datasource.url=jdbc:h2:mem:img_store_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA and Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

# File Upload Configuration
# Change the file size value as desired
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Kafka Configuration
# Set kafka.enabled to true if you want to enable Kafka messaging.
kafka.enabled=false

# JWT Configuration
# Generate a JWT secret (minimum 32 characters) using: openssl rand -base64 32
# Update the token expiration time as needed
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000

# Logging Configuration
logging.level.org.springframework.security=TRACE
